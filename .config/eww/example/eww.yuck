(defpoll VOLUME :interval "1s" "scrips/volume --get")

(deflisten volume `bash ../scripts/audio --get-volicon`)

(defwidget bar []
  (centerbox :orientation "h" :class "bar" :space-evenly true
    (box :orientation "h" :space-evenly false (workspaces))
    (box :orientation "h" :space-evenly false (window_w))
    (box :orientation "h" :space-evenly true (right))
  )
)

(defwidget container [?align]
  (box :halign "${align}" :class "container" :space-evenly false
    (children)
  )
)
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (container :align "start"
      (box :space-evenly true
        (label :text "${workspaces}${current_workspace}" :visible false)
        (for workspace in workspaces
          (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
            (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
              (label :text "${workspace.id}")
            )
          )
        )
      )
    )
  )
)

(deflisten window :initial "..." "bash ~/.config/eww/scripts/get-window-title")
(defwidget window_w []
  (container :align "center"
    (box :class "window-title" :space-evenly false :width "100" :halign "center"
      (label :text "${window}")
    )
  )
)

(defvar time-visible false)   ; for :run-while property of below variable
; when this turns true, the polling starts and
; var gets updated with given interval

(defpoll time :interval "1s"
  :initial "initial-value"  ; optional, defaults to poll at startup
  :run-while time-visible   ; optional, defaults to 'true'
`date +%H:%M:%S`)
(defpoll date :interval "10s"  "date '+%b %d, %Y'")
(defwidget right []
  (container :align "end"
    (box :space-evenly false
      (label :text "ï€—   ${time} - ${date} ")
    )
    (box :space-evenly false
      (button :class "systray"
        :onclick "bash ../scripts/launch_dashboard"
        :onmiddleclick "bash ./scripts/audio --toggle-vol"
        (label :text  "${volume}"))
    )
  )
)

(defwindow example
  :monitor 0
  :geometry ( geometry
    :x "0%"
    :y "5px"
    :width "98%"
    :height "20px"
  :anchor "top center")
  :stacking "bottom"
  :reserve (struts :distance "0px" :side "top")
  :windowtype "dock"
  :wm-ignore true
  :exclusive true
  (bar)
)
